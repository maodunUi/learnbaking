<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.OrderDao">

<sql id="Simple_Column">
 select
 order.id as order_id,
 order.courseId as order_courseId,
 order.orderTime as order_orderTime,
 order.payType as order_payType,
 order.userId as order_userId,
 order.publisherId as order_publisherId,
 order.orderIndex as order_orderIndex,
 order.state as order_state,
 order.price as order_price,
 order.number as order_number,
 order.subject as order_subject,
 order.name as order_name
 from order as order 
</sql>

<sql id="Base_Column">
 select
 order.id as order_id,
 order.courseId as order_courseId,
 order.orderTime as order_orderTime,
 order.payType as order_payType,
 order.userId as order_userId,
 order.publisherId as order_publisherId,
 order.orderIndex as order_orderIndex,
 order.state as order_state,
 order.price as order_price,
 order.number as order_number,
 order.subject as order_subject,
 order.name as order_name
 from order as order 
</sql>

<sql id="Detail_Column">
 select
 order.id as order_id,
 order.courseId as order_courseId,
 order.orderTime as order_orderTime,
 order.payType as order_payType,
 order.userId as order_userId,
 order.publisherId as order_publisherId,
 order.orderIndex as order_orderIndex,
 order.state as order_state,
 order.price as order_price,
 order.number as order_number,
 order.subject as order_subject,
 order.name as order_name
 from order as order 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.OrderSimpleView">
<id column="order_id" jdbcType="INTEGER" property="id" />
 <result column="order_courseId" jdbcType="INTEGER" property="courseId" />
 <result column="order_orderTime" jdbcType="TIMESTAMP" property="orderTime" />
 <result column="order_payType" jdbcType="TINYINT" property="payType" />
 <result column="order_userId" jdbcType="INTEGER" property="userId" />
 <result column="order_publisherId" jdbcType="INTEGER" property="publisherId" />
 <result column="order_orderIndex" jdbcType="TINYINT" property="orderIndex" />
 <result column="order_state" jdbcType="TINYINT" property="state" />
 <result column="order_price" jdbcType="DOUBLE" property="price" />
 <result column="order_number" jdbcType="VARCHAR" property="number" />
 <result column="order_subject" jdbcType="VARCHAR" property="subject" />
 <result column="order_name" jdbcType="VARCHAR" property="name" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.OrderView">
<id column="order_id" jdbcType="INTEGER" property="id" />
 <result column="order_courseId" jdbcType="INTEGER" property="courseId" />
 <result column="order_orderTime" jdbcType="TIMESTAMP" property="orderTime" />
 <result column="order_payType" jdbcType="TINYINT" property="payType" />
 <result column="order_userId" jdbcType="INTEGER" property="userId" />
 <result column="order_publisherId" jdbcType="INTEGER" property="publisherId" />
 <result column="order_orderIndex" jdbcType="TINYINT" property="orderIndex" />
 <result column="order_state" jdbcType="TINYINT" property="state" />
 <result column="order_price" jdbcType="DOUBLE" property="price" />
 <result column="order_number" jdbcType="VARCHAR" property="number" />
 <result column="order_subject" jdbcType="VARCHAR" property="subject" />
 <result column="order_name" jdbcType="VARCHAR" property="name" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.OrderView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from order where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from order
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from order
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.OrderQueryParams">
delete from order 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.OrderView" useGeneratedKeys="true" keyProperty="id">
insert into order (courseId,orderTime,payType,userId,publisherId,orderIndex,state,price,number,subject,name) 
 values(#{courseId,jdbcType=INTEGER},#{orderTime,jdbcType=TIMESTAMP},#{payType,jdbcType=TINYINT},#{userId,jdbcType=INTEGER},#{publisherId,jdbcType=INTEGER},#{orderIndex,jdbcType=TINYINT},#{state,jdbcType=TINYINT},#{price,jdbcType=DOUBLE},#{number,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.OrderView" useGeneratedKeys="true" keyProperty="id">
insert into order
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="courseId != null">
courseId,
</if>
 <if test="orderTime != null">
orderTime,
</if>
 <if test="payType != null">
payType,
</if>
 <if test="userId != null">
userId,
</if>
 <if test="publisherId != null">
publisherId,
</if>
 <if test="orderIndex != null">
orderIndex,
</if>
 <if test="state != null">
state,
</if>
 <if test="price != null">
price,
</if>
 <if test="number != null">
number,
</if>
 <if test="subject != null">
subject,
</if>
 <if test="name != null">
name,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="courseId != null">
#{courseId,jdbcType=INTEGER},
</if>
<if test="orderTime != null">
#{orderTime,jdbcType=TIMESTAMP},
</if>
<if test="payType != null">
#{payType,jdbcType=TINYINT},
</if>
<if test="userId != null">
#{userId,jdbcType=INTEGER},
</if>
<if test="publisherId != null">
#{publisherId,jdbcType=INTEGER},
</if>
<if test="orderIndex != null">
#{orderIndex,jdbcType=TINYINT},
</if>
<if test="state != null">
#{state,jdbcType=TINYINT},
</if>
<if test="price != null">
#{price,jdbcType=DOUBLE},
</if>
<if test="number != null">
#{number,jdbcType=VARCHAR},
</if>
<if test="subject != null">
#{subject,jdbcType=VARCHAR},
</if>
<if test="name != null">
#{name,jdbcType=VARCHAR},
</if>
</trim>
</insert>

<insert id="saves" >
insert into order (courseId,orderTime,payType,userId,publisherId,orderIndex,state,price,number,subject,name) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.courseId,jdbcType=INTEGER},#{obj.orderTime,jdbcType=TIMESTAMP},#{obj.payType,jdbcType=TINYINT},#{obj.userId,jdbcType=INTEGER},#{obj.publisherId,jdbcType=INTEGER},#{obj.orderIndex,jdbcType=TINYINT},#{obj.state,jdbcType=TINYINT},#{obj.price,jdbcType=DOUBLE},#{obj.number,jdbcType=VARCHAR},#{obj.subject,jdbcType=VARCHAR},#{obj.name,jdbcType=VARCHAR})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.OrderView">
update order 
set  courseId = #{courseId,jdbcType=INTEGER}, orderTime = #{orderTime,jdbcType=TIMESTAMP}, payType = #{payType,jdbcType=TINYINT}, userId = #{userId,jdbcType=INTEGER}, publisherId = #{publisherId,jdbcType=INTEGER}, orderIndex = #{orderIndex,jdbcType=TINYINT}, state = #{state,jdbcType=TINYINT}, price = #{price,jdbcType=DOUBLE}, number = #{number,jdbcType=VARCHAR}, subject = #{subject,jdbcType=VARCHAR}, name = #{name,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.OrderView">
update order 
<set>
<if test="courseId != null"> courseId = #{courseId,jdbcType=INTEGER},</if>
<if test="orderTime != null"> orderTime = #{orderTime,jdbcType=TIMESTAMP},</if>
<if test="payType != null"> payType = #{payType,jdbcType=TINYINT},</if>
<if test="userId != null"> userId = #{userId,jdbcType=INTEGER},</if>
<if test="publisherId != null"> publisherId = #{publisherId,jdbcType=INTEGER},</if>
<if test="orderIndex != null"> orderIndex = #{orderIndex,jdbcType=TINYINT},</if>
<if test="state != null"> state = #{state,jdbcType=TINYINT},</if>
<if test="price != null"> price = #{price,jdbcType=DOUBLE},</if>
<if test="number != null"> number = #{number,jdbcType=VARCHAR},</if>
<if test="subject != null"> subject = #{subject,jdbcType=VARCHAR},</if>
<if test="name != null"> name = #{name,jdbcType=VARCHAR},</if>
</set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where order.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where order.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.OrderQueryParams" resultType="long">
select count(distinct order.id) from order as order
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.OrderQueryParams" resultType="java.lang.Integer">
select distinct order.id from order as order
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.OrderQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">order.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">order.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.OrderQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">order.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">order.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.OrderQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where order.id in 
(select * from(select distinct order.id from order as order 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as ordertempTable)
</select>
<!--%%%%%%%%%%%-->
 <select id="getByNumber"  resultMap="BaseResultMap" parameterType="java.lang.String">
  <include refid="Base_Column" />
  where order.number = #{number,jdbcType=INTEGER}
 </select>
</mapper>