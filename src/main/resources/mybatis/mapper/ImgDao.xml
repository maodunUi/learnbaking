<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.ImgDao">

<sql id="Simple_Column">
 select
 img.id as img_id,
 img.imgUrl as img_imgUrl,
 img.memo as img_memo,
 img.type as img_type,
 img.workId as img_workId
 from img as img 
</sql>

<sql id="Base_Column">
 select
 img.id as img_id,
 img.imgUrl as img_imgUrl,
 img.memo as img_memo,
 img.type as img_type,
 img.workId as img_workId
 from img as img 
</sql>

<sql id="Detail_Column">
 select
 img.id as img_id,
 img.imgUrl as img_imgUrl,
 img.memo as img_memo,
 img.type as img_type,
 img.workId as img_workId
 from img as img 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.ImgSimpleView">
<id column="img_id" jdbcType="INTEGER" property="id" />
 <result column="img_imgUrl" jdbcType="VARCHAR" property="imgUrl" />
 <result column="img_memo" jdbcType="VARCHAR" property="memo" />
 <result column="img_type" jdbcType="TINYINT" property="type" />
 <result column="img_workId" jdbcType="INTEGER" property="workId" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.ImgView">
<id column="img_id" jdbcType="INTEGER" property="id" />
 <result column="img_imgUrl" jdbcType="VARCHAR" property="imgUrl" />
 <result column="img_memo" jdbcType="VARCHAR" property="memo" />
 <result column="img_type" jdbcType="TINYINT" property="type" />
 <result column="img_workId" jdbcType="INTEGER" property="workId" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.ImgView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from img where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from img
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from img
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.ImgQueryParams">
delete from img 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.ImgView" useGeneratedKeys="true" keyProperty="id">
insert into img (imgUrl,memo,type,workId) 
 values(#{imgUrl,jdbcType=VARCHAR},#{memo,jdbcType=VARCHAR},#{type,jdbcType=TINYINT},#{workId,jdbcType=INTEGER})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.ImgView" useGeneratedKeys="true" keyProperty="id">
insert into img
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="imgUrl != null">
imgUrl,
</if>
 <if test="memo != null">
memo,
</if>
 <if test="type != null">
type,
</if>
 <if test="workId != null">
workId,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="imgUrl != null">
#{imgUrl,jdbcType=VARCHAR},
</if>
<if test="memo != null">
#{memo,jdbcType=VARCHAR},
</if>
<if test="type != null">
#{type,jdbcType=TINYINT},
</if>
<if test="workId != null">
#{workId,jdbcType=INTEGER},
</if>
</trim>
</insert>

<insert id="saves" >
insert into img (imgUrl,memo,type,workId) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.imgUrl,jdbcType=VARCHAR},#{obj.memo,jdbcType=VARCHAR},#{obj.type,jdbcType=TINYINT},#{obj.workId,jdbcType=INTEGER})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.ImgView">
update img 
set  imgUrl = #{imgUrl,jdbcType=VARCHAR}, memo = #{memo,jdbcType=VARCHAR}, type = #{type,jdbcType=TINYINT}, workId = #{workId,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.ImgView">
update img 
<set>
<if test="imgUrl != null"> imgUrl = #{imgUrl,jdbcType=VARCHAR},</if>
<if test="memo != null"> memo = #{memo,jdbcType=VARCHAR},</if>
<if test="type != null"> type = #{type,jdbcType=TINYINT},</if>
<if test="workId != null"> workId = #{workId,jdbcType=INTEGER},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where img.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where img.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.ImgQueryParams" resultType="long">
select count(distinct img.id) from img as img
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.ImgQueryParams" resultType="java.lang.Integer">
select distinct img.id from img as img
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.ImgQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">img.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">img.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.ImgQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">img.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">img.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.ImgQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where img.id in 
(select * from(select distinct img.id from img as img 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as imgtempTable)
</select>

</mapper>