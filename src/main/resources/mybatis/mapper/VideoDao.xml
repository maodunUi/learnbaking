<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.VideoDao">

<sql id="Simple_Column">
 select
 video.id as video_id,
 video.videoUrl as video_videoUrl,
 video.memo as video_memo,
 video.state as video_state,
 video.userId as video_userId,
 video.createTime as video_createTime,
 video.orderIndex as video_orderIndex,
 video.courseId as video_courseId
 from video as video 
</sql>

<sql id="Base_Column">
 select
 video.id as video_id,
 video.videoUrl as video_videoUrl,
 video.memo as video_memo,
 video.state as video_state,
 video.userId as video_userId,
 video.createTime as video_createTime,
 video.orderIndex as video_orderIndex,
 video.courseId as video_courseId
 from video as video 
</sql>

<sql id="Detail_Column">
 select
 video.id as video_id,
 video.videoUrl as video_videoUrl,
 video.memo as video_memo,
 video.state as video_state,
 video.userId as video_userId,
 video.createTime as video_createTime,
 video.orderIndex as video_orderIndex,
 video.courseId as video_courseId
 from video as video 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.VideoSimpleView">
<id column="video_id" jdbcType="INTEGER" property="id" />
 <result column="video_videoUrl" jdbcType="VARCHAR" property="videoUrl" />
 <result column="video_memo" jdbcType="VARCHAR" property="memo" />
 <result column="video_state" jdbcType="TINYINT" property="state" />
 <result column="video_userId" jdbcType="INTEGER" property="userId" />
 <result column="video_createTime" jdbcType="TIMESTAMP" property="createTime" />
 <result column="video_orderIndex" jdbcType="INTEGER" property="orderIndex" />
 <result column="video_courseId" jdbcType="INTEGER" property="courseId" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.VideoView">
<id column="video_id" jdbcType="INTEGER" property="id" />
 <result column="video_videoUrl" jdbcType="VARCHAR" property="videoUrl" />
 <result column="video_memo" jdbcType="VARCHAR" property="memo" />
 <result column="video_state" jdbcType="TINYINT" property="state" />
 <result column="video_userId" jdbcType="INTEGER" property="userId" />
 <result column="video_createTime" jdbcType="TIMESTAMP" property="createTime" />
 <result column="video_orderIndex" jdbcType="INTEGER" property="orderIndex" />
 <result column="video_courseId" jdbcType="INTEGER" property="courseId" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.VideoView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from video where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from video
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from video
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.VideoQueryParams">
delete from video 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.VideoView" useGeneratedKeys="true" keyProperty="id">
insert into video (videoUrl,memo,state,userId,createTime,orderIndex,courseId) 
 values(#{videoUrl,jdbcType=VARCHAR},#{memo,jdbcType=VARCHAR},#{state,jdbcType=TINYINT},#{userId,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{orderIndex,jdbcType=INTEGER},#{courseId,jdbcType=INTEGER})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.VideoView" useGeneratedKeys="true" keyProperty="id">
insert into video
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="videoUrl != null">
videoUrl,
</if>
 <if test="memo != null">
memo,
</if>
 <if test="state != null">
state,
</if>
 <if test="userId != null">
userId,
</if>
 <if test="createTime != null">
createTime,
</if>
 <if test="orderIndex != null">
orderIndex,
</if>
 <if test="courseId != null">
courseId,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="videoUrl != null">
#{videoUrl,jdbcType=VARCHAR},
</if>
<if test="memo != null">
#{memo,jdbcType=VARCHAR},
</if>
<if test="state != null">
#{state,jdbcType=TINYINT},
</if>
<if test="userId != null">
#{userId,jdbcType=INTEGER},
</if>
<if test="createTime != null">
#{createTime,jdbcType=TIMESTAMP},
</if>
<if test="orderIndex != null">
#{orderIndex,jdbcType=INTEGER},
</if>
<if test="courseId != null">
#{courseId,jdbcType=INTEGER},
</if>
</trim>
</insert>

<insert id="saves" >
insert into video (videoUrl,memo,state,userId,createTime,orderIndex,courseId) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.videoUrl,jdbcType=VARCHAR},#{obj.memo,jdbcType=VARCHAR},#{obj.state,jdbcType=TINYINT},#{obj.userId,jdbcType=INTEGER},#{obj.createTime,jdbcType=TIMESTAMP},#{obj.orderIndex,jdbcType=INTEGER},#{obj.courseId,jdbcType=INTEGER})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.VideoView">
update video 
set  videoUrl = #{videoUrl,jdbcType=VARCHAR}, memo = #{memo,jdbcType=VARCHAR}, state = #{state,jdbcType=TINYINT}, userId = #{userId,jdbcType=INTEGER}, createTime = #{createTime,jdbcType=TIMESTAMP}, orderIndex = #{orderIndex,jdbcType=INTEGER}, courseId = #{courseId,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.VideoView">
update video 
<set>
<if test="videoUrl != null"> videoUrl = #{videoUrl,jdbcType=VARCHAR},</if>
<if test="memo != null"> memo = #{memo,jdbcType=VARCHAR},</if>
<if test="state != null"> state = #{state,jdbcType=TINYINT},</if>
<if test="userId != null"> userId = #{userId,jdbcType=INTEGER},</if>
<if test="createTime != null"> createTime = #{createTime,jdbcType=TIMESTAMP},</if>
<if test="orderIndex != null"> orderIndex = #{orderIndex,jdbcType=INTEGER},</if>
<if test="courseId != null"> courseId = #{courseId,jdbcType=INTEGER},</if>
</set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where video.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where video.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.VideoQueryParams" resultType="long">
select count(distinct video.id) from video as video
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.VideoQueryParams" resultType="java.lang.Integer">
select distinct video.id from video as video
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.VideoQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">video.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">video.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.VideoQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">video.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">video.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
 <if test="courseId != null">and video.courseId=#{courseId,jdbcType=INTEGER}</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.VideoQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where video.id in 
(select * from(select distinct video.id from video as video 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as videotempTable)
</select>

</mapper>