<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.CategoryDao">

<sql id="Simple_Column">
 select
 category.id as category_id,
 category.title as category_title,
 category.order_index as category_order_index,
 category.memo as category_memo
 from category as category 
</sql>

<sql id="Base_Column">
 select
 category.id as category_id,
 category.title as category_title,
 category.order_index as category_order_index,
 category.memo as category_memo
 from category as category 
</sql>

<sql id="Detail_Column">
 select
 category.id as category_id,
 category.title as category_title,
 category.order_index as category_order_index,
 category.memo as category_memo
 from category as category 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.CategorySimpleView">
<id column="category_id" jdbcType="INTEGER" property="id" />
 <result column="category_title" jdbcType="VARCHAR" property="title" />
 <result column="category_order_index" jdbcType="TINYINT" property="order_index" />
 <result column="category_memo" jdbcType="VARCHAR" property="memo" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.CategoryView">
<id column="category_id" jdbcType="INTEGER" property="id" />
 <result column="category_title" jdbcType="VARCHAR" property="title" />
 <result column="category_order_index" jdbcType="TINYINT" property="order_index" />
 <result column="category_memo" jdbcType="VARCHAR" property="memo" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.CategoryView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from category where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from category
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from category
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.CategoryQueryParams">
delete from category 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.CategoryView" useGeneratedKeys="true" keyProperty="id">
insert into category (title,order_index,memo) 
 values(#{title,jdbcType=VARCHAR},#{order_index,jdbcType=TINYINT},#{memo,jdbcType=VARCHAR})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.CategoryView" useGeneratedKeys="true" keyProperty="id">
insert into category
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="title != null">
title,
</if>
 <if test="order_index != null">
order_index,
</if>
 <if test="memo != null">
memo,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="title != null">
#{title,jdbcType=VARCHAR},
</if>
<if test="order_index != null">
#{order_index,jdbcType=TINYINT},
</if>
<if test="memo != null">
#{memo,jdbcType=VARCHAR},
</if>
</trim>
</insert>

<insert id="saves" >
insert into category (title,order_index,memo) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.title,jdbcType=VARCHAR},#{obj.order_index,jdbcType=TINYINT},#{obj.memo,jdbcType=VARCHAR})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.CategoryView">
update category 
set  title = #{title,jdbcType=VARCHAR}, order_index = #{order_index,jdbcType=TINYINT}, memo = #{memo,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.CategoryView">
update category 
<set>
<if test="title != null"> title = #{title,jdbcType=VARCHAR},</if>
<if test="order_index != null"> order_index = #{order_index,jdbcType=TINYINT},</if>
<if test="memo != null"> memo = #{memo,jdbcType=VARCHAR},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where category.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where category.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.CategoryQueryParams" resultType="long">
select count(distinct category.id) from category as category
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.CategoryQueryParams" resultType="java.lang.Integer">
select distinct category.id from category as category
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.CategoryQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">category.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">category.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.CategoryQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">category.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">category.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.CategoryQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where category.id in 
(select * from(select distinct category.id from category as category 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as categorytempTable)
</select>

</mapper>