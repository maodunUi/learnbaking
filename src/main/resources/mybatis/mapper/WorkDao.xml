<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.WorkDao">

<sql id="Simple_Column">
 select
 work.id as work_id,
 work.user_id as work_user_id,
 work.title as work_title,
 work.add_time as work_add_time,
 work.state as work_state,
 work.count as work_count,
 work.comment_id as work_comment_id,
 work.category_id as work_category_id
 from work as work 
</sql>

<sql id="Base_Column">
 select
 work.id as work_id,
 work.user_id as work_user_id,
 work.title as work_title,
 work.add_time as work_add_time,
 work.state as work_state,
 work.count as work_count,
 work.comment_id as work_comment_id,
 work.category_id as work_category_id
 from work as work 
</sql>

<sql id="Detail_Column">
 select
 work.id as work_id,
 work.user_id as work_user_id,
 work.title as work_title,
 work.add_time as work_add_time,
 work.state as work_state,
 work.count as work_count,
 work.comment_id as work_comment_id,
 work.category_id as work_category_id
 from work as work 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.WorkSimpleView">
<id column="work_id" jdbcType="INTEGER" property="id" />
 <result column="work_user_id" jdbcType="INTEGER" property="user_id" />
 <result column="work_title" jdbcType="VARCHAR" property="title" />
 <result column="work_add_time" jdbcType="DATE" property="add_time" />
 <result column="work_state" jdbcType="TINYINT" property="state" />
 <result column="work_count" jdbcType="INTEGER" property="count" />
 <result column="work_comment_id" jdbcType="INTEGER" property="comment_id" />
 <result column="work_category_id" jdbcType="INTEGER" property="category_id" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.WorkView">
<id column="work_id" jdbcType="INTEGER" property="id" />
 <result column="work_user_id" jdbcType="INTEGER" property="user_id" />
 <result column="work_title" jdbcType="VARCHAR" property="title" />
 <result column="work_add_time" jdbcType="DATE" property="add_time" />
 <result column="work_state" jdbcType="TINYINT" property="state" />
 <result column="work_count" jdbcType="INTEGER" property="count" />
 <result column="work_comment_id" jdbcType="INTEGER" property="comment_id" />
 <result column="work_category_id" jdbcType="INTEGER" property="category_id" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.WorkView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from work where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from work
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from work
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.WorkQueryParams">
delete from work 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.WorkView" useGeneratedKeys="true" keyProperty="id">
insert into work (user_id,title,add_time,state,count,comment_id,category_id) 
 values(#{user_id,jdbcType=INTEGER},#{title,jdbcType=VARCHAR},#{add_time,jdbcType=DATE},#{state,jdbcType=TINYINT},#{count,jdbcType=INTEGER},#{comment_id,jdbcType=INTEGER},#{category_id,jdbcType=INTEGER})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.WorkView" useGeneratedKeys="true" keyProperty="id">
insert into work
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="user_id != null">
user_id,
</if>
 <if test="title != null">
title,
</if>
 <if test="add_time != null">
add_time,
</if>
 <if test="state != null">
state,
</if>
 <if test="count != null">
count,
</if>
 <if test="comment_id != null">
comment_id,
</if>
 <if test="category_id != null">
category_id,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="user_id != null">
#{user_id,jdbcType=INTEGER},
</if>
<if test="title != null">
#{title,jdbcType=VARCHAR},
</if>
<if test="add_time != null">
#{add_time,jdbcType=DATE},
</if>
<if test="state != null">
#{state,jdbcType=TINYINT},
</if>
<if test="count != null">
#{count,jdbcType=INTEGER},
</if>
<if test="comment_id != null">
#{comment_id,jdbcType=INTEGER},
</if>
<if test="category_id != null">
#{category_id,jdbcType=INTEGER},
</if>
</trim>
</insert>

<insert id="saves" >
insert into work (user_id,title,add_time,state,count,comment_id,category_id) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.user_id,jdbcType=INTEGER},#{obj.title,jdbcType=VARCHAR},#{obj.add_time,jdbcType=DATE},#{obj.state,jdbcType=TINYINT},#{obj.count,jdbcType=INTEGER},#{obj.comment_id,jdbcType=INTEGER},#{obj.category_id,jdbcType=INTEGER})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.WorkView">
update work 
set  user_id = #{user_id,jdbcType=INTEGER}, title = #{title,jdbcType=VARCHAR}, add_time = #{add_time,jdbcType=DATE}, state = #{state,jdbcType=TINYINT}, count = #{count,jdbcType=INTEGER}, comment_id = #{comment_id,jdbcType=INTEGER}, category_id = #{category_id,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.WorkView">
update work 
<set>
<if test="user_id != null"> user_id = #{user_id,jdbcType=INTEGER},</if>
<if test="title != null"> title = #{title,jdbcType=VARCHAR},</if>
<if test="add_time != null"> add_time = #{add_time,jdbcType=DATE},</if>
<if test="state != null"> state = #{state,jdbcType=TINYINT},</if>
<if test="count != null"> count = #{count,jdbcType=INTEGER},</if>
<if test="comment_id != null"> comment_id = #{comment_id,jdbcType=INTEGER},</if>
<if test="category_id != null"> category_id = #{category_id,jdbcType=INTEGER},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where work.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where work.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.WorkQueryParams" resultType="long">
select count(distinct work.id) from work as work
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.WorkQueryParams" resultType="java.lang.Integer">
select distinct work.id from work as work
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.WorkQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">work.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">work.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.WorkQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">work.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">work.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.WorkQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where work.id in 
(select * from(select distinct work.id from work as work 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as worktempTable)
</select>

</mapper>