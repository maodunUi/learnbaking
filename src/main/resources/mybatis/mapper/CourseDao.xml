<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ymt.dao.CourseDao">

<sql id="Simple_Column">
 select
 course.id as course_id,
 course.videoUrl as course_videoUrl,
 course.title as course_title,
 course.imgUrl as course_imgUrl,
 course.memo as course_memo,
 course.memoTwo as course_memoTwo,
 course.howLearn as course_howLearn,
 course.bakerName as course_bakerName,
 course.backerImgUrl as course_backerImgUrl,
 course.bakerIntroduce as course_bakerIntroduce,
 course.price as course_price,
 course.peopleCount as course_peopleCount,
 course.addTime as course_addTime,
 course.orderIndex as course_orderIndex,
 course.state as course_state,
 course.categoryId as course_categoryId,
 course.isindex as course_isindex
 from course as course 
</sql>

<sql id="Base_Column">
 select
 course.id as course_id,
 course.videoUrl as course_videoUrl,
 course.title as course_title,
 course.imgUrl as course_imgUrl,
 course.memo as course_memo,
 course.memoTwo as course_memoTwo,
 course.howLearn as course_howLearn,
 course.bakerName as course_bakerName,
 course.backerImgUrl as course_backerImgUrl,
 course.bakerIntroduce as course_bakerIntroduce,
 course.price as course_price,
 course.peopleCount as course_peopleCount,
 course.addTime as course_addTime,
 course.orderIndex as course_orderIndex,
 course.state as course_state,
 course.categoryId as course_categoryId,
 course.isindex as course_isindex
 from course as course 
</sql>

<sql id="Detail_Column">
 select
 course.id as course_id,
 course.videoUrl as course_videoUrl,
 course.title as course_title,
 course.imgUrl as course_imgUrl,
 course.memo as course_memo,
 course.memoTwo as course_memoTwo,
 course.howLearn as course_howLearn,
 course.bakerName as course_bakerName,
 course.backerImgUrl as course_backerImgUrl,
 course.bakerIntroduce as course_bakerIntroduce,
 course.price as course_price,
 course.peopleCount as course_peopleCount,
 course.addTime as course_addTime,
 course.orderIndex as course_orderIndex,
 course.state as course_state,
 course.categoryId as course_categoryId,
 course.isindex as course_isindex
 from course as course 
</sql>

<resultMap id="SimpleResultMap" type="cn.ymt.view.simple.CourseSimpleView">
<id column="course_id" jdbcType="INTEGER" property="id" />
 <result column="course_videoUrl" jdbcType="VARCHAR" property="videoUrl" />
 <result column="course_title" jdbcType="VARCHAR" property="title" />
 <result column="course_imgUrl" jdbcType="VARCHAR" property="imgUrl" />
 <result column="course_memo" jdbcType="LONGVARCHAR" property="memo" />
 <result column="course_memoTwo" jdbcType="LONGVARCHAR" property="memoTwo" />
 <result column="course_howLearn" jdbcType="VARCHAR" property="howLearn" />
 <result column="course_bakerName" jdbcType="VARCHAR" property="bakerName" />
 <result column="course_backerImgUrl" jdbcType="VARCHAR" property="backerImgUrl" />
 <result column="course_bakerIntroduce" jdbcType="VARCHAR" property="bakerIntroduce" />
 <result column="course_price" jdbcType="DOUBLE" property="price" />
 <result column="course_peopleCount" jdbcType="INTEGER" property="peopleCount" />
 <result column="course_addTime" jdbcType="DATE" property="addTime" />
 <result column="course_orderIndex" jdbcType="TINYINT" property="orderIndex" />
 <result column="course_state" jdbcType="TINYINT" property="state" />
 <result column="course_categoryId" jdbcType="INTEGER" property="categoryId" />
 <result column="course_isindex" jdbcType="TINYINT" property="isindex" />
</resultMap>

<resultMap id="BaseResultMap" type="cn.ymt.view.CourseView">
<id column="course_id" jdbcType="INTEGER" property="id" />
 <result column="course_videoUrl" jdbcType="VARCHAR" property="videoUrl" />
 <result column="course_title" jdbcType="VARCHAR" property="title" />
 <result column="course_imgUrl" jdbcType="VARCHAR" property="imgUrl" />
 <result column="course_memo" jdbcType="LONGVARCHAR" property="memo" />
 <result column="course_memoTwo" jdbcType="LONGVARCHAR" property="memoTwo" />
 <result column="course_howLearn" jdbcType="VARCHAR" property="howLearn" />
 <result column="course_bakerName" jdbcType="VARCHAR" property="bakerName" />
 <result column="course_backerImgUrl" jdbcType="VARCHAR" property="backerImgUrl" />
 <result column="course_bakerIntroduce" jdbcType="VARCHAR" property="bakerIntroduce" />
 <result column="course_price" jdbcType="DOUBLE" property="price" />
 <result column="course_peopleCount" jdbcType="INTEGER" property="peopleCount" />
 <result column="course_addTime" jdbcType="DATE" property="addTime" />
 <result column="course_orderIndex" jdbcType="TINYINT" property="orderIndex" />
 <result column="course_state" jdbcType="TINYINT" property="state" />
 <result column="course_categoryId" jdbcType="INTEGER" property="categoryId" />
 <result column="course_isindex" jdbcType="TINYINT" property="isindex" />
</resultMap>

<resultMap id="DetailResultMap" type="cn.ymt.view.CourseView" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from course where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from course
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteObjects">
delete from course
where <foreach collection="list" item="i" open="(" close=")" separator=" or "> id=#{i.id,jdbcType=INTEGER} </foreach>
  </delete>

<delete id="deleteByParams" parameterType="cn.ymt.query.CourseQueryParams">
delete from course 
<where><if test="condition != null">${condition}</if></where>
</delete>

<insert id="save" parameterType="cn.ymt.view.CourseView" useGeneratedKeys="true" keyProperty="id">
insert into course (videoUrl,title,imgUrl,memo,memoTwo,howLearn,bakerName,backerImgUrl,bakerIntroduce,price,peopleCount,addTime,orderIndex,state,categoryId,isindex) 
 values(#{videoUrl,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR},#{imgUrl,jdbcType=VARCHAR},#{memo,jdbcType=LONGVARCHAR},#{memoTwo,jdbcType=LONGVARCHAR},#{howLearn,jdbcType=VARCHAR},#{bakerName,jdbcType=VARCHAR},#{backerImgUrl,jdbcType=VARCHAR},#{bakerIntroduce,jdbcType=VARCHAR},#{price,jdbcType=DOUBLE},#{peopleCount,jdbcType=INTEGER},#{addTime,jdbcType=DATE},#{orderIndex,jdbcType=TINYINT},#{state,jdbcType=TINYINT},#{categoryId,jdbcType=INTEGER},#{isindex,jdbcType=TINYINT})
</insert>

<insert id="saveNoNull" parameterType="cn.ymt.view.CourseView" useGeneratedKeys="true" keyProperty="id">
insert into course
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="videoUrl != null">
videoUrl,
</if>
 <if test="title != null">
title,
</if>
 <if test="imgUrl != null">
imgUrl,
</if>
 <if test="memo != null">
memo,
</if>
 <if test="memoTwo != null">
memoTwo,
</if>
 <if test="howLearn != null">
howLearn,
</if>
 <if test="bakerName != null">
bakerName,
</if>
 <if test="backerImgUrl != null">
backerImgUrl,
</if>
 <if test="bakerIntroduce != null">
bakerIntroduce,
</if>
 <if test="price != null">
price,
</if>
 <if test="peopleCount != null">
peopleCount,
</if>
 <if test="addTime != null">
addTime,
</if>
 <if test="orderIndex != null">
orderIndex,
</if>
 <if test="state != null">
state,
</if>
 <if test="categoryId != null">
categoryId,
</if>
 <if test="isindex != null">
isindex,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="videoUrl != null">
#{videoUrl,jdbcType=VARCHAR},
</if>
<if test="title != null">
#{title,jdbcType=VARCHAR},
</if>
<if test="imgUrl != null">
#{imgUrl,jdbcType=VARCHAR},
</if>
<if test="memo != null">
#{memo,jdbcType=LONGVARCHAR},
</if>
<if test="memoTwo != null">
#{memoTwo,jdbcType=LONGVARCHAR},
</if>
<if test="howLearn != null">
#{howLearn,jdbcType=VARCHAR},
</if>
<if test="bakerName != null">
#{bakerName,jdbcType=VARCHAR},
</if>
<if test="backerImgUrl != null">
#{backerImgUrl,jdbcType=VARCHAR},
</if>
<if test="bakerIntroduce != null">
#{bakerIntroduce,jdbcType=VARCHAR},
</if>
<if test="price != null">
#{price,jdbcType=DOUBLE},
</if>
<if test="peopleCount != null">
#{peopleCount,jdbcType=INTEGER},
</if>
<if test="addTime != null">
#{addTime,jdbcType=DATE},
</if>
<if test="orderIndex != null">
#{orderIndex,jdbcType=TINYINT},
</if>
<if test="state != null">
#{state,jdbcType=TINYINT},
</if>
<if test="categoryId != null">
#{categoryId,jdbcType=INTEGER},
</if>
<if test="isindex != null">
#{isindex,jdbcType=TINYINT},
</if>
</trim>
</insert>

<insert id="saves" >
insert into course (videoUrl,title,imgUrl,memo,memoTwo,howLearn,bakerName,backerImgUrl,bakerIntroduce,price,peopleCount,addTime,orderIndex,state,categoryId,isindex) 
 values <foreach collection="list" item="obj" separator=",">(#{obj.videoUrl,jdbcType=VARCHAR},#{obj.title,jdbcType=VARCHAR},#{obj.imgUrl,jdbcType=VARCHAR},#{obj.memo,jdbcType=LONGVARCHAR},#{obj.memoTwo,jdbcType=LONGVARCHAR},#{obj.howLearn,jdbcType=VARCHAR},#{obj.bakerName,jdbcType=VARCHAR},#{obj.backerImgUrl,jdbcType=VARCHAR},#{obj.bakerIntroduce,jdbcType=VARCHAR},#{obj.price,jdbcType=DOUBLE},#{obj.peopleCount,jdbcType=INTEGER},#{obj.addTime,jdbcType=DATE},#{obj.orderIndex,jdbcType=TINYINT},#{obj.state,jdbcType=TINYINT},#{obj.categoryId,jdbcType=INTEGER},#{obj.isindex,jdbcType=TINYINT})</foreach>
</insert>
<update id="updateAll" parameterType="cn.ymt.view.CourseView">
update course 
set  videoUrl = #{videoUrl,jdbcType=VARCHAR}, title = #{title,jdbcType=VARCHAR}, imgUrl = #{imgUrl,jdbcType=VARCHAR}, memo = #{memo,jdbcType=LONGVARCHAR}, memoTwo = #{memoTwo,jdbcType=LONGVARCHAR}, howLearn = #{howLearn,jdbcType=VARCHAR}, bakerName = #{bakerName,jdbcType=VARCHAR}, backerImgUrl = #{backerImgUrl,jdbcType=VARCHAR}, bakerIntroduce = #{bakerIntroduce,jdbcType=VARCHAR}, price = #{price,jdbcType=DOUBLE}, peopleCount = #{peopleCount,jdbcType=INTEGER}, addTime = #{addTime,jdbcType=DATE}, orderIndex = #{orderIndex,jdbcType=TINYINT}, state = #{state,jdbcType=TINYINT}, categoryId = #{categoryId,jdbcType=INTEGER}, isindex = #{isindex,jdbcType=TINYINT} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="cn.ymt.view.CourseView">
update course 
<set>
<if test="videoUrl != null"> videoUrl = #{videoUrl,jdbcType=VARCHAR},</if>
<if test="title != null"> title = #{title,jdbcType=VARCHAR},</if>
<if test="imgUrl != null"> imgUrl = #{imgUrl,jdbcType=VARCHAR},</if>
<if test="memo != null"> memo = #{memo,jdbcType=LONGVARCHAR},</if>
<if test="memoTwo != null"> memoTwo = #{memoTwo,jdbcType=LONGVARCHAR},</if>
<if test="howLearn != null"> howLearn = #{howLearn,jdbcType=VARCHAR},</if>
<if test="bakerName != null"> bakerName = #{bakerName,jdbcType=VARCHAR},</if>
<if test="backerImgUrl != null"> backerImgUrl = #{backerImgUrl,jdbcType=VARCHAR},</if>
<if test="bakerIntroduce != null"> bakerIntroduce = #{bakerIntroduce,jdbcType=VARCHAR},</if>
<if test="price != null"> price = #{price,jdbcType=DOUBLE},</if>
<if test="peopleCount != null"> peopleCount = #{peopleCount,jdbcType=INTEGER},</if>
<if test="addTime != null"> addTime = #{addTime,jdbcType=DATE},</if>
<if test="orderIndex != null"> orderIndex = #{orderIndex,jdbcType=TINYINT},</if>
<if test="state != null"> state = #{state,jdbcType=TINYINT},</if>
<if test="categoryId != null"> categoryId = #{categoryId,jdbcType=INTEGER},</if>
<if test="isindex != null"> isindex = #{isindex,jdbcType=TINYINT},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where course.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where course.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="cn.ymt.query.CourseQueryParams" resultType="long">
select count(distinct course.id) from course as course
<where>
<if test="condition != null">(${condition})</if>
</where>
</select>

<select id="getDistinctIds" parameterType="cn.ymt.query.CourseQueryParams" resultType="java.lang.Integer">
select distinct course.id from course as course
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getSimple" parameterType="cn.ymt.query.CourseQueryParams" resultMap="SimpleResultMap">
<include refid="Simple_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">course.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">course.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getBasic" parameterType="cn.ymt.query.CourseQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">(${condition})</if>
<if test="pojos != null">
 and <foreach collection="pojos" open="(" close=")" separator=" or " item="pojo">course.id=#{pojo.id,jdbcType=INTEGER}</foreach>
</if>
<if test="ids != null">
 and <foreach collection="ids" open="(" close=")" separator=" or " item="idTemp">course.id=#{idTemp,jdbcType=INTEGER}</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
</select>

<select id="getDetail" parameterType="cn.ymt.query.CourseQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
 where course.id in 
(select * from(select distinct course.id from course as course 
<where>
<if test="condition != null">(${condition})</if>
</where>
<if test="recordIndex != null"> limit #{recordIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}</if>
) as coursetempTable)
</select>
<!--%%%%%%%%%%%%%%-->
<!--得到首页的六个课程-->
 <select id="getSix" resultMap="SimpleResultMap" parameterType="cn.ymt.query.CourseQueryParams">
  select * from course where
  <if test="categoryId != null"> category_id = #{categoryId,jdbcType=INTEGER} and </if>
  isindex = 1 limit 4,6
 </select>
 <select id="getFour" resultMap="SimpleResultMap" parameterType="cn.ymt.query.CourseQueryParams">
  select * from course where
  <if test="categoryId != null"> category_id = #{categoryId,jdbcType=INTEGER} and </if>
   isindex = 1 limit 0,4
 </select>
</mapper>